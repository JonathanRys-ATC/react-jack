// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test PlayField component matches the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PlayField
    clearCard={[MockFunction]}
    dealer={
      Object {
        "avatar": "./images/dealer.png",
        "busted": Array [
          false,
        ],
        "hand": Array [
          "HA",
          "C5",
        ],
        "handFlipped": false,
        "hasBlackjack": Array [
          false,
        ],
        "name": "Dealer",
        "score": Array [
          0,
        ],
      }
    }
    deck={
      Object {
        "deck": Array [],
        "drawnCard": null,
      }
    }
    giveCard={[MockFunction]}
    player={
      Object {
        "avatar": "./images/default.png",
        "balance": 0,
        "busted": Array [
          Array [
            false,
          ],
        ],
        "currentBet": 0,
        "hands": Array [
          Array [
            "SA",
            "CK",
          ],
          Array [
            "D2",
            "HJ",
          ],
        ],
        "hasBlackjack": Array [
          Array [
            false,
          ],
        ],
        "hasInsurance": Array [
          Array [
            false,
          ],
        ],
        "name": "Player1",
        "playerIndex": 1,
        "score": Array [
          Array [
            0,
          ],
        ],
        "splitHand": false,
      }
    }
    turn={
      Object {
        "errMsg": "",
        "error": false,
        "isPlaying": true,
        "numPlayers": 2,
        "playersTurn": 0,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Row
          tag="div"
        >
          <Dealer
            clearCard={[MockFunction]}
            drawnCard={null}
            hand={
              Array [
                "HA",
                "C5",
              ]
            }
            playersTurn={0}
            takeCard={undefined}
          />
        </Row>,
        <Row
          tag="div"
        >
          <Deck />
           
        </Row>,
        <Row
          tag="div"
        >
          <Player
            clearCard={[MockFunction]}
            drawnCard={null}
            hands={
              Array [
                Array [
                  "SA",
                  "CK",
                ],
                Array [
                  "D2",
                  "HJ",
                ],
              ]
            }
            playersTurn={0}
            takeCard={[MockFunction]}
          />
        </Row>,
      ],
      "className": "PlayField_main",
      "tag": "div",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Dealer
            clearCard={[MockFunction]}
            drawnCard={null}
            hand={
              Array [
                "HA",
                "C5",
              ]
            }
            playersTurn={0}
            takeCard={undefined}
          />,
          "tag": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "clearCard": [MockFunction],
            "drawnCard": null,
            "hand": Array [
              "HA",
              "C5",
            ],
            "playersTurn": 0,
            "takeCard": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Deck />,
            " ",
          ],
          "tag": "div",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          " ",
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Player
            clearCard={[MockFunction]}
            drawnCard={null}
            hands={
              Array [
                Array [
                  "SA",
                  "CK",
                ],
                Array [
                  "D2",
                  "HJ",
                ],
              ]
            }
            playersTurn={0}
            takeCard={[MockFunction]}
          />,
          "tag": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "clearCard": [MockFunction],
            "drawnCard": null,
            "hands": Array [
              Array [
                "SA",
                "CK",
              ],
              Array [
                "D2",
                "HJ",
              ],
            ],
            "playersTurn": 0,
            "takeCard": [MockFunction],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Row
            tag="div"
          >
            <Dealer
              clearCard={[MockFunction]}
              drawnCard={null}
              hand={
                Array [
                  "HA",
                  "C5",
                ]
              }
              playersTurn={0}
              takeCard={undefined}
            />
          </Row>,
          <Row
            tag="div"
          >
            <Deck />
             
          </Row>,
          <Row
            tag="div"
          >
            <Player
              clearCard={[MockFunction]}
              drawnCard={null}
              hands={
                Array [
                  Array [
                    "SA",
                    "CK",
                  ],
                  Array [
                    "D2",
                    "HJ",
                  ],
                ]
              }
              playersTurn={0}
              takeCard={[MockFunction]}
            />
          </Row>,
        ],
        "className": "PlayField_main",
        "tag": "div",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Dealer
              clearCard={[MockFunction]}
              drawnCard={null}
              hand={
                Array [
                  "HA",
                  "C5",
                ]
              }
              playersTurn={0}
              takeCard={undefined}
            />,
            "tag": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "clearCard": [MockFunction],
              "drawnCard": null,
              "hand": Array [
                "HA",
                "C5",
              ],
              "playersTurn": 0,
              "takeCard": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Deck />,
              " ",
            ],
            "tag": "div",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            " ",
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Player
              clearCard={[MockFunction]}
              drawnCard={null}
              hands={
                Array [
                  Array [
                    "SA",
                    "CK",
                  ],
                  Array [
                    "D2",
                    "HJ",
                  ],
                ]
              }
              playersTurn={0}
              takeCard={[MockFunction]}
            />,
            "tag": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "clearCard": [MockFunction],
              "drawnCard": null,
              "hands": Array [
                Array [
                  "SA",
                  "CK",
                ],
                Array [
                  "D2",
                  "HJ",
                ],
              ],
              "playersTurn": 0,
              "takeCard": [MockFunction],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
